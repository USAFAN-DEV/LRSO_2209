cd: para ir a un directorio
  cd / para ir al directorio raíz
  cd ~ para ir al directorio home
  cd . para ir al directorio actual
  cd .. para ir al directorio anterior
  
pwd: te dice donde estas situado actualmente

ls: lista todos los archivos que hay dentro del directorio
  ls -l: te da una serie de datos sobre tus ficheros. La primera letra te dice que tipo de archivo es, las tres siguientes los permisos que tiene el propietario
         del archivo rwx (read, write, execute), las tres siguientes los permisos que tiene el grupo, y las tres siguientes los permisos que tiene cualquier usuario del 
         sistema. El numero te indica cuantos subelementos tiene el directorio. Despues viene el usuario y el grupo, el tamaño en bytes, la fecha de creación y el nombre
         del directorio
  ls -a: te muestra también los ficheros ocultos (estos empiezan con un punto)
  ls -R: te muestra tanto los archivos del directorio, como los archivos de los subdirectorios
  Podemos juntar los 3: ls -alR 

clear: para limpiar la terminal

history: te muestra el historial de los comandos que has ejecutado

file: te dice que tipo de archivo es 
  file text.txt
  file /home/usafan/U-tad/text.txt

type: para darle otro nombre a un comando que te sea más fácil de recordar

which: te muestra la ruta/PATH para llegar a un archivo

echo: muestra algo
  echo $PATH: muestra el PATH
  echo "......" > text.txt: para escribir algo dentro de un fichero (sobreponiendolo sobre lo ya escrito)
  echo "......" >> text.txt: para escribir algo dentro de un fichero manteniendo lo ya escrito anteriormente
  echo "......": muestra texto

printenv: te muestra todas las variables del S.O.
  printenv <variableentorno>: para ver una variable del S.O.

cat <fichero>: para ver lo que hay escrito en un fichero
  cat <fichero1> > <fichero2>: para pasar el contenido de un fichero a otro
  cat <fichero1> >> <fichero2>: para pasar el contenido de un fichero a otro, manteniedo lo que ya tenia escrito este
  
man <comando>: manual de ese comando

mkdir <nombredirectorio>: para crear un directorio
  mkdir -p nuevodirectorio/nuevodirectorio2/nuevodirectorio3: para crear un directorio y sus subdirectorios con un solo comando
  
rmdir <nombredirectorio>: para borrar un directorio vacio
  rm -r <nombredirectorio>: para borrar un directorio y sus archivos
  rm <nombrefichero>: para borrar un fichero
  
touch <nombrefichero>: para crear un fichero

tail -n10 <nombrefichero>: te muestra las 10 ultimas lineas de un fichero
head -n10 <nombrefichero>: te muestra las 10 primeras lineas de un fichero

ln /s <destino (a donde te llevara el enlace)> <nombre_enlace>: para crear un enlace simbolico

patrones para seleccionar archivos
  b*: selecciona los archivos que empiezan con la letra b
  b*.txt: selecciona los archivos .txt que empiezan con la letra b
  Data???: selecciona los archivos que empezan con Data y tienen 3 caracteres mas
  [a,b,c]*: selecciona los archivos que empiezan por la a, la b o la c
  [:upper:]*: selecciona los archivos que empiezan con mayuscula
  [:lower:]*: selecciona los archivos que empiezan con minuscula
  BACKUP.[[:digit:]][[:digit:]]: selecciona los archivos que empiezan por BACKUP. seguidos de dos digitos

cp <origen><destino>: para copiar ficheros
  cp /etc/profile U-tad: copiar profile al directorio U-tad
  cp /etc/profile U-tad/my_profile.txt: copiar profile al directorio U-tad con otro nombre
  cp -R <directorio1> <directorio2>: para copiar el directorio1 y todo su contenido en el directorio 2

mv plato.txt plato1.txt: para renombrar un fichero
mv <nombrefichero> <nombredirectorio>: para mover un fichero a un directorio
mv <nombredirectorio> <nombreotrodirectorio>: para mover un directorio a otro directorio

Empaquetar
tar cvf misficheros.tar <nombredelosficheros>: para empaquetar varios ficheros en un archivo .tar
  tar xvf misficheros.tar: extraer el contenido de un .tar

Comprimir
tar cvzf misficheros_comprimidos.tgz <nombredelosficheros>: comprimir archivos usando gzip
  tar cvzf mi_directorio_comprimido.tgz <nombredirectorio>: comprimir un directorio usando gzip
  tar xvzf misficheros_comprimidos.tgz: extraer el contenido de un .tgz
  
tar cvjf mi_fichero_comprimido2.bz2 <nombrefichero>: comprimir archivos usando bzip. tambien se pueden comprimir directorios
  tar xvjf mi_fichero_comprimido.bz2: extraer el contenido de un .bz2
 
tar tvf misficheros.tar: listar el contenido de un fichero tar

gzip <nombrefichero>: convertir a un fichero en un archivo zip
gunzip <nombrearchivozip>: para descomprimir un archivo zip

bzip2 <nombrefichero>: convertir a un fichero en un archivo zip
bunzip2 <nombrefichero>: para descomprimir un archivo zip

SCRIPTS
nano file.sh: entramos al editor de texto
  empezamos siempre con #!/bin/bash
  para dar permisos de ejecucion a un script usamos chmod +x file.sh
  para ejecutar un script ./file.sh
  
SUBIR ALGO A GITHUB
git add.
git commit /m "titulo"
git push

ACTUALIZAR REPO EN LINUX
git pull
  
date: fecha
date+"%Y": año (2022)
date + "%m": mes 
date + "%d" : dia
date + "%y" : año (22)
date = "%d-%m-%Y": 18-10-2022
"%H:%M:%S" : hora

cal: calendario
cal -m12: diciembre
cal -y 2021: calendario 2021
timedatectl: hora de la placa base
timedatectl list-timezones: listado todas las zonas horararias
timedatectl list-timezones | grep -i "Europe": zonas horarias europa. con el -i da igual que usemos mayusculas o minusculas

systemctl: estado del sistema
  status, start, stop (atributos)
con | podemos concatenar diferentes comandos

history | grep "tail" : comandos con la palabra tail 

Comando grep: 2 parametros

grep patron fichero
grep usafan etc/group: buscame dentro de etc/group todas las entradas que tengan dicho patron (usafan)
-i para no tener en cuenta mayusculas o minusculas
-n para ver el numero de las lineas en las que se encuentra el patron
-c para ver en cuantas lineas aparece
-v para ver las lineas que no tienen el patron
-e para expresiones regulares (grep -e "di*") todas las palabras que empiecen por d o por di y n de su linea
grep "^diego" : lienas que empiecen por diego
grep -r "diego" *: para buscar en que ficheros esta la palabra diego

cat fichero| grep "palabra"
cat /etc/group | grep "diego" lineas en la que sale la palabra diego en el fichero mencionado

ps: ver procesos que estas realizando
ps u: informacion de usuario extendida
ps aux: informacion de todos los usuarios. Primera columna: usuario que ha lanzado el servicio. Segunda columna: pid

ps aux | grep "proceso"
kill pid : matar proceso

find . / ~ /etc
  -name.txt: find ~ -name "name*": te busca en tu home x fichero
  find ~ /type d /name name*": encuentra los directorios que empiecen por name
  find ~ -empty: encuentra ficheros vacios en home
  -executables: para ejecutables
  -readable: para leeibles
  
Dar permisos ( enmascaramiento binario)
si al ususario le queremos dar todos los permisos (7)
si al grupo queremos darle los dos primeros (3)
si a todos los usuarios queremos darle el de ejecucion y el de lectura (6)
chmod 736 <fichero al que quieres dar permisos>, quedaria rwx-wxr-x

find ~ -empty

awk 
echo "1) John  Maths 6.54">notes.txt
echo "2) Paul  Physiscs 8.23">>notes.txt
echo "3) Michael Biology 7.98">>notes.txt

awk '{print}' notes.txt
awk /Phy/ '{print}' notes.tx: solo se imprimen las lineas que tienen Phy 

awk '{print $1}' notes.txt: imprime el primer caracter de casa linea
awk '{print $2"\t\t"$3}' notes.txt: imprime el 2 y 3 elementos.


sed

sed 's/patroninicial/patronfinal/g' fichero1
                                   <fichero1>fichero2
Cambia una palabra por otra (patron inicial por patron finala)
si queremos que cambie todos los, por ejemplo, holas, hay que poner g al final de las comillas, sino solo nos cambiaria un hola por el patron final, solo uno
-i si queremos que los cambios se produzcan en el fichero original
si no ponemos la -i, solo se muestra por pantalla el cambio





















